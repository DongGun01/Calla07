<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">	
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- Annotation 기반의 AOP 기능 사용 -->
	<aop:aspectj-autoproxy />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
 	<beans:bean id="uploadpath" class="java.lang.String">
		<beans:constructor-arg value="\\172.16.3.4\\upload"></beans:constructor-arg>
	</beans:bean> 
	
	
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일 업로드 최대 용량 설정 : 1024 * 1024 * 10B = 10MB -->
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>
	
  	
	<!-- email 인증 관련 -->
    <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <beans:property name="host" value="smtp.gmail.com" />
        <beans:property name="port" value="587" />
        <beans:property name="username" value="dongtest54"/> <!-- 구글아이디 -->
        <beans:property name="password" value="acvrfqypnbbztibb"/><!-- 구글앱비밀번호 -->
        <beans:property name="javaMailProperties">
            <beans:props>
                <beans:prop key="mail.transport.protocol">smtp</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop>
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
                <beans:prop key="mail.debug">true</beans:prop>
                <beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
                <beans:prop key="mail.smtp.ssl.protocols">TLSv1.2</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
	
	<!-- Interceptor 클래스의 인스턴스를 bean으로 관리 -->
	<beans:bean id="LoginSessionInterceptor" 
		class="project.spring.calla.interceptor.LoginSessionInterceptor">
	</beans:bean>
	
	<!-- 웹소켓 -->
	<websocket:handlers>
	    <websocket:mapping handler="echoHandler" path="/echo"/>
	    <websocket:handshake-interceptors>
	        <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
	    </websocket:handshake-interceptors>
	</websocket:handlers>
	
	<!-- Interceptor가 가로챌 URL 매핑 설정 -->
	<interceptors>
		<interceptor>
			<mapping path="/fBoard/register"/> <!-- interceptor할 url 경로 -->
			<mapping path="/fBoard/update"/> <!-- interceptor할 url 경로 -->
			<mapping path="/fBoard/delete"/> <!-- interceptor할 url 경로 -->
			<mapping path="/fBoard/comments/*"/> <!-- interceptor할 url 경로 -->
			<mapping path="/member/boards"/> <!-- interceptor할 url 경로 -->
			<mapping path="/member/comments"/> <!-- interceptor할 url 경로 -->
			<mapping path="/member/likes"/> <!-- interceptor할 url 경로 -->
			<mapping path="/member/manageMember"/> <!-- interceptor할 url 경로 -->
			<mapping path="/member/myPage"/> <!-- interceptor할 url 경로 -->
			<mapping path="/member/update"/> <!-- interceptor할 url 경로 -->
			<beans:ref bean="LoginSessionInterceptor"/> <!-- 참조할 bean 객체 id -->
		</interceptor>
	</interceptors>
	
	<!-- 뒤로가기 캐쉬 삭제 설정 코드 -->
	<interceptors>
		<beans:bean id="webContentInterceptor"
			class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<beans:property name="cacheSeconds" value="0"></beans:property>
			<beans:property name="useExpiresHeader" value="true"></beans:property>
			<beans:property name="useCacheControlHeader" value="true"></beans:property>
			<beans:property name="useCacheControlNoStore" value="true"></beans:property>
		</beans:bean>
	</interceptors>
	
	<context:component-scan base-package="project.spring.calla" />
	
	<task:executor id="myExecutor" pool-size="5" />
	<task:scheduler id="myScheduler" pool-size="5" />
	<task:annotation-driven scheduler="myScheduler" />
	
	
</beans:beans>
