<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.spring.calla.MemberMapper">

	<select id="login" resultType="String">
		select ${memberId} from ${member}
		where ${memberId} = #{memberId} and ${memberPw} = #{memberPw}
	</select>
	
	
	<select id="select_by_member_id" resultType="MemberVO">
		select * from ${member}
		where ${memberId} = #{memberId}
	</select>
	
	<select id="search_id" resultType="String">
		select ${memberId} from ${member}
		where ${memberName} = #{memberName} and ${memberEmail} = #{memberEmail}
	</select>
	
	<select id="search_pw" resultType="String">
		select ${memberPw} from ${member}
		where ${memberId} = #{memberId} and ${memberPhone} = #{memberPhone}
	</select>

	<delete id="delete">
		delete from ${member} where ${memberId} = #{memberId}
	</delete>

	<select id="select" resultType="MemberVO">
		select * from ${member}
	</select>

	<!-- 회원가입 -->
	<insert id="insert">
		insert into ${member}
		(${memberId}, ${memberPw}, ${memberName}, ${memberEmail}, ${memberPhone},
		${memberInterest}, ${memberAddress}, ${memberNickname})
		values (#{memberId}, #{memberPw}, #{memberName}, #{memberEmail},
		#{memberPhone}, #{memberInterest}, #{memberAddress}, #{memberNickname})
	</insert>

	<!-- 아이디 중복체크 -->
	<select id="select_by_id" resultType="Integer"> <!-- 셀렉트는 무조건 resulttype이 있어야함 -->
		select count(*) check_cnt from ${member} where ${memberId} =
		#{memberId}
	</select>

	<!-- 닉네임 중복체크 -->
	<select id="select_by_nickname" resultType="Integer">
		select count(*) check_cnt from ${member} where ${memberNickname} =
		#{memberNickname}
	</select>
	
<!-- 	
	<insert id="insertMailAuth" >
	    insert into ${mail_authentication}
	    (${memberEmail}, ${authenticationKey})
	    values (#{memberEmail}, #{AuthenticationKey}) map으로 보내서 가져올 때 키와 이름이 같아야함 
	</insert>
	
	<insert id="insertMailAuth" >
	    insert into ${mail_authentication}
	    (${memberEmail}, ${authenticationKey}, ${authenticationStatus})
	    values (#{memberEmail}, #{AuthenticationKey}, 0) map으로 보내서 가져올 때 키와 이름이 같아야함 
	</insert>
	
	이메일 인증되었을 때
	<update id="completeAuth" parameterType="String">
    UPDATE mail_auth SET is_auth=1
    WHERE mail=#{mail}
	</update>
	
	이메일 인증키 재발급
	<update id="updateMailAuth" parameterType="String">
	    update ${mail_authentication} 
	    set auth_key=#{authKey}
	    ,is_auth=0
	    WHERE mail=#{mail}
	</update> -->
	
	<update id="update">
		update ${member}
		set ${category} = #{newData}
		where ${memberId} = #{memberId}
	</update>
	
	<update id="updatePw">
		update ${member}
		set ${memberPw} = #{memberPw}
		where ${memberId} = #{memberId}
	</update>
	
	<update id="updateLevel">
		update ${member}
		set ${memberLevel} = ${memberLevel} + #{amount}
		where ${memberId} = #{memberId}
	</update>
	
		
	<delete id="delete_uproduct">
		delete from ${u_product} where ${uProductId} = #{uProductId}
	</delete>
	
	
</mapper>






