<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.spring.calla.MemberMapper">


	<insert id="insert">
		insert into ${member}
		(${memberId}, ${memberPw}, ${memberName}, ${memberEmail}, ${memberPhone},
		${memberInterest}, ${memberAddress}, ${memberNickname})
		values (#{memberId}, #{memberPw}, #{memberName}, #{memberEmail},
		#{memberPhone}, #{memberInterest}, #{memberAddress}, #{memberNickname})<!-- 
			물음표 -->
	</insert>
	<!-- property의 name과 vo의 변수 이름이 같아야함 -->

	<!-- 아이디 중복체크 -->
	<select id="select_by_id" resultType="Integer"> <!-- 셀렉트는 무조건 resulttype이 있어야함 -->
		select count(*) check_cnt from ${member} where ${memberId} =
		#{memberId}
	</select>

	<!-- 닉네임 중복체크 -->
	<select id="select_by_nickname" resultType="Integer">
		select count(*) check_cnt from ${member} where ${memberNickname} =
		#{memberNickname}
	</select>
	
	<select id="info" resultType="MemberVO">
		select ${memberId} and ${memberLevel}
		from ${member}
	</select>


	<select id="login" resultType="String">
		select ${memberId} from ${member}
		where ${memberId} = #{memberId} and ${memberPw} = #{memberPw}
	</select>

	<select id="select_by_member_id" resultType="MemberVO">
		select * from ${member}
		where ${memberId} = #{memberId}
	</select>

	<update id="update">
		update ${member}
		set ${memberPw} = #{memberPw}, ${memberName} = #{memberName},
		${memberEmail} = #{memberEmail}, ${memberPhone} = #{memberPhone},
		${memberInterest} = #{memberInterest}, ${memberAddress} =
		#{memberAddress},
		${memberNickname} = #{memberNickname}
		where ${memberId} = #{memberId}
	</update>
	
	<select id="search_id" resultType="String">
		select ${memberId} from ${member}
		where ${memberName} = #{memberName} and ${memberEmail} = #{memberEmail}
	</select>
	
	<select id="search_pw" resultType="String">
		select ${memberPw} from ${member}
		where ${memberId} = #{memberId} and ${memberPhone} = #{memberPhone}
	</select>
	
	<update id="updatePw">
		update ${member}
		set ${memberPw} = #{memberPw}
		where ${memberId} = #{memberId}
	</update>
	
	<update id="updateNickname">
		update ${member}
		set ${memberNickname} = #{memberNickname}
		where ${memberId} = #{memberId}
	</update>
	
	<update id="updatePhone">
		update ${member}
		set ${memberPhone} = #{memberPhone}
		where ${memberId} = #{memberId}
	</update>
	
	<update id="updateEmail">
		update ${member}
		set ${memberEmail} = #{memberEmail}
		where ${memberId} = #{memberId}
	</update>

	<update id="updateInterest">
		update ${member}
		set ${memberInterest} = #{memberInterest}
		where ${memberId} = #{memberId}
	</update>
	
	<update id="updateAddress">
		update ${member}
		set ${memberAddress} = #{memberAddress}
		where ${memberId} = #{memberId}
	</update>
	
	<update id="updateLevel">
		update ${member}
		set ${memberLevel} = ${memberLevel} + #{amount}
		where ${memberId} = #{memberId}
	</update>
	
	<select id="select" resultType="MemberVO">
		select * from ${member}
	</select>
	
	<delete id="delete">
		delete from ${member} where ${memberId} = #{memberId}
	</delete>
	
	<select id="select_by_my_u_product" resultType="UproductVO">
		select
		${uProductId}, ${uProductName}, ${uProductPrice}, ${uProductViews},
		${uProductLikes}, ${uProductCreatedDate}, ${uProductCategori},
		${uProductImagePath}, ${uProductContent}, ${memberAddress},
		${memberNickname}, ${uProductCommentCount}
		from(
		select rownum rn, a.*
		from(
		select * from ${u_product}
		where ${memberNickname} = #{memberNickname} 
		)a
		) where rn between #{start} and #{end}

	</select>
	
	<select id="total_count_by_my_u_product"
		resultType="Integer">
		select count(*) total_cnt from ${u_product}
		where ${memberNickname} = #{memberNickname}
	</select>
	
	<select id="select_by_product_id" resultType="UproductVO">
		select * from
		${u_product} where ${uProductId} = #{uProductId}
	</select>
	
	<insert id="buy_insert">
		insert into ${u_product_buy}
		(${uProductName}, ${uProductPrice}, ${uProductCategori}, ${memberAddress}, ${uProductContent},
		${buyerNickname}, ${uProductImagePath})
		values (#{uProductName}, #{uProductPrice}, #{uProductCategori}, #{memberAddress},
		#{uProductContent}, #{buyerNickname}, #{uProductImagePath})<!-- 
			물음표 -->
	</insert>
	
	
		<insert id="sell_insert">
		insert into ${u_product_sell}
		(${uProductName}, ${uProductPrice}, ${uProductCategori}, ${memberAddress}, ${uProductContent},
		${memberNickname}, ${uProductImagePath}, ${buyerNickname}, ${uProductBuyId})
		values (#{uProductName}, #{uProductPrice}, #{uProductCategori}, #{memberAddress},
		#{uProductContent}, #{memberNickname}, #{uProductImagePath}, #{buyerNickname}, #{uProductBuyId})<!-- 
			물음표 -->
		</insert>
	
	
</mapper>

















