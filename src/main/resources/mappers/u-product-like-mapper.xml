<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.spring.calla.UProductLikeMapper">
<!-- namespace : dao 클래스의 sqlSession과 연결하기 위한 키로 사용 -->

	<!-- 
	* mapper 태그
	<insert>, <select>, <update>, <delete>
	dao - sqlSession의 함수(insert, selectOne, selectList, update, delete)
	와 매핑되어 쿼리를 수행
	
	* mapper 태그의 id 속성
	dao 클래스의 sqlSession 특정 함수와 연결하기 위해 사용
	
	* mapper 쿼리 특징
	${key 이름} : mybatis-config.xml의 property - name과 매칭. DB 테이블의 컬럼
	#{key 이름} : dao 클래스의 sqlSession에서 전송받은 데이터 변수명(입력받은 데이터)
	 -->
	
	<insert id="insert">
		insert into ${u_product_like}
		(${uProductId}, ${memberId})
		values (#{uProductId}, #{memberId})
	</insert>
	
	<delete id="delete">
		delete from ${u_product_like}
		where ${memberId} = #{memberId} and ${uProductId} = #{uProductId}
	</delete>
	
	
	<delete id="delete_by_id">
		delete from ${u_product_like}
		where ${uProductLikeId} = #{uProductLikeId}
	</delete>
	
	<select id="total_count" resultType="Integer">
		select count(*) total_cnt from ${u_product_like} where ${uProductId} = #{uProductId}
	</select>
	
	
	<select id="select_by_member_id" resultType="UProductLikeVO">
		select * from ${u_product_like} where ${uProductId} = #{uProductId} and ${memberId} = #{memberId}
	</select>
	
</mapper>




