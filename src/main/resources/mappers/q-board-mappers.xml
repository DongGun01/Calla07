<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.spring.calla.QNABoardMapper">
<!-- namespace : dao 클래스의 sqlSession과 연결하기 위한 키로 사용 -->

	 <insert id="insert">
	 insert into ${q_board}
	 (${memberNickname}, ${qBoardTitle}, ${qBoardContent}, ${qBoardViews}, ${qBoardImagePath}, ${qBoardStatus})
	 values (#{memberNickname}, #{qBoardTitle}, #{qBoardContent}, #{qBoardViews}, #{qBoardImagePath}, #{qBoardStatus})
	 </insert>
	 <!-- property의 name과 vo의 변수 이름이 같아야함 -->
	 
	 <select id="select_all" resultType="QBoardVO"> 
	 	select * from ${q_board}
	 	order by ${qBoardId} desc
	 </select>
	 
	 <select id="select_by_board_id" resultType="QBoardVO">
	 	select * from ${q_board} where ${qBoardId} = #{qBoardId}
	 </select>
	 
	 <update id="update">
	 	update ${q_board}
	 	set ${qBoardTitle} = #{qBoardTitle}, ${qBoardContent} = #{qBoardContent}
	 	where ${qBoardId} = #{qBoardId}
	 </update>
	 
	 <delete id="delete">
	 	delete from ${q_board}
	 	where ${qBoardId} = #{qBoardId}
	 </delete>
	 
	 <select id="paging" resultType="QBoardVO"> 
	 	select ${qBoardId}, ${qBoardTitle}, ${qBoardContent}, ${memberNickname}, ${qBoardCreatedDate}, ${qBoardViews}, ${qBoardCommentCount}
	 	from(
	 		select rownum rn, a.* from(
	 			select * from ${q_board} order by ${qBoardId} desc
	 		)a
	 	) where rn between #{start} and #{end}
	 	
	 </select>
	 
	 <!-- 
	 #{start} : criteria.getStart()
	 #{end} : criteria.getEnd()
	 셀렉트 타입은 리절트타입이 필요함
	  -->

	  <select id="total_count" resultType="Integer">
	  	select count(*) total_cnt from ${q_board}
	  </select>
	  
	 <!--  <select id="select_by_memberNickname" resultType="QBoardVO">
	  	select * 
	  	from ${q_board}
	  	where ${memberNickname} like #{memberNickname}
	  </select> -->
	  
	  <select id="select_by_memberNickname" resultType="QBoardVO">
	  	select ${qBoardId}, ${qBoardTitle}, ${qBoardContent}, ${memberNickname}, ${qBoardCreatedDate}, ${qBoardViews}, ${qBoardCommentCount}
	 	from(
	 		select rownum rn, a.* from(
	 			select * from ${q_board} where ${memberNickname} like #{keyword}  
	 			order by ${qBoardId} desc
	 		)a
	 	) where rn between #{start} and #{end}
	  </select>
	  
	  <select id="select_by_title" resultType="QBoardVO">
	  	select * 
	  	from ${q_board}
	  	where ${qBoardTitle} like #{keyword} 
	  	order by ${qBoardId} desc
	  </select>
	  
	  <select id="total_count_by_membernickname" resultType="Integer">
	  	select count(*) total_cnt from ${q_board} where ${memberNickname} like #{keyword}
	 </select>
	 
	 <select id="total_count_by_title" resultType="Integer">
	  	select count(*) total_cnt from ${q_board} 
	  	where ${qBoardTitle} like #{keyword}
	 </select>
	 
	  
	  <update id="update_comment_count">
	  	update ${q_board}
	  	set ${qBoardCommentCount} = ${qBoardCommentCount} + #{amount}<!-- 댓글을 입력하면 amount에 1이 입력됨 -->
	  	where ${qBoardId} = #{qBoardId}
	  </update>
	  
	 <select id="select_all_by_memberNickname" resultType="QBoardVO">
	 	select *
	 	from (
	 		select rownum rn, a.* 
	 		from(
	 			select * from ${q_board} where ${memberNickname} = #{memberNickname}
	 			order by ${qBoardCreatedDate} desc
	 		) a
	 	) where rn between #{criteria.start} and #{criteria.end}
	 </select>
	 
	 <select id="get_total_count_by_memberNickname" resultType="Integer">
	 	select count(*) from ${q_board} where ${memberNickname} = #{memberNickname}
	 </select>
	 
	 <update id="update_views">
	 	update ${q_board}
	 	set ${qBoardViews} = ${qBoardViews} + #{views}
	 	where ${qBoardId} = #{qBoardId}
	 </update>
	  
</mapper>





